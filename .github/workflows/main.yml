name: Mastercard BackBank for Vaumoney of Vaults.biz
# env:
  # REACT_APP_CF_API_KEY: ${{ secrets.CF_API_KEY }} # https://github.com/facebook/create-react-app/discussions/9064
  # CF_CF_API_KEY: ${{ secrets.CF_API_KEY }} wrangler dev
on:
  release:
    types:
      - published
  push:
    branches:
      - maintenance
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 #main
      
      - name: Navigate to repo
        run: cd $GITHUB_WORKSPACE
        
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy
          
      #- uses: actions/setup-node@main
        #with:
          #node-version: "14.x"
      #- uses: cloudflare/wrangler-action@2.0.0
      
      # - run: curl https://sh.rustup.rs -sSf | sh -s -- -y && $HOME/.cargo/bin/cargo install -q worker-build && worker-build --release
      # - run: export CARGO_HOME=$HOME/.cargo export RUSTUP_HOME=$HOME/.rustup
      # - run: curl https://sh.rustup.rs -sSf | sh -s -- -y
      # - run: source "$HOME/.cargo/env"
      # - run: cargo install -q worker-build
      # - run: worker-build --release
      
      #- uses: actions-rs/toolchain@v1
        #with:
          #toolchain: stable
      #- uses: actions-rs/cargo@v1
        #with:
          #command: install
          #args: -q worker-build #@0.0.6 # --all-features
          
          #args: -q worker-build#--release --all-features
      #- name: rust-cargo-install
        #uses: actions-rs/install@v0.1.2
        #with:
          #crate: cargo-audit
          #version: latest
      #- run: cargo audit
      
      #- name: Setup PHP
        #uses: shivammathur/setup-php@v2
        #with:
          #php-version: "8.1"
          #coverage: xdebug
          #extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
      
      #- name: Validate Composer
        #run: composer validate --strict
        
      #- name: Install PHP dependencies
        #run: composer install --no-interaction --ignore-platform-reqs
      #- name: Install deps
        #run: npm install
      #- name: Build docs
        #run: npm run build
        
      #- name: Install latest worker-build
        #uses: Swatinem/rust-cache@v2.0.0
        #with:
          #command: install
          #args: -q worker-build@0.0.6 #--all-features
          
      #- name: Build worker release
        #uses: Swatinem/rust-cache@v2.0.0
        #with:
          #command: worker-build
          #args: --release
          
      #- name: Run cargo check
        #uses: actions-rs/cargo@v1 #main->v1
        #with:
          #command: check
          
      #- name: Install cargo by rustup & Build
        #uses: cloudflare/wrangler-action@1.3.0
        #with:
          #email: "nmcarducci@gmail.com"
          #apiKey: ${{ secrets.CF_API_KEY }}
          ## apiToken: ${{ secrets.CF_API_TOKEN }}
          #environment: "production"
          #publish: false
          #preCommands: curl https://sh.rustup.rs -sSf | sh -s -- -y && source "$HOME/.cargo/env" && cargo install --git https://github.com/cloudflare/workers-rs --branch zeb/esbuild && cargo install --git https://github.com/WebAssembly/binaryen/releases/download/version_90/binaryen-version_90-x86-linux.tar.gz # sudo chown -R $(id -un):$(id -gn) ${{ github.workspace }} # curl https://sh.rustup.rs -sSf | sh -s -- -y && $HOME/.cargo/bin/cargo install -q worker-build && worker-build --release
        #env:
          #USER: root
          
      - name: Publish
        uses: cloudflare/wrangler-action@2.0.0
        with:
          # wrangler 2 uses token instead
          #-email: "nmcarducci@gmail.com"
          # https://github.com/NickCarducci/bear/blob/maintenance/.github/workflows/main.yml
          #-apiKey: ${{ secrets.CF_API_KEY }}
          #authorization: ${{ secrets.AUTHORIZATION }}
          apiToken: ${{ secrets.CF_API_TOKEN }} # https://superuser.com/questions/1575061/how-do-i-download-and-extract-a-tar-in-one-command-while-extracting-only-a-sing
          preCommands: curl https://sh.rustup.rs -sSf | sh -s -- -y && PATH="$PATH:$HOME/.cargo/bin" && cargo install --git https://github.com/cloudflare/workers-rs && PATH="$PATH:$HOME/.cache/.wasm-pack/.wasm-bindgen-cargo-install-0.2.81/bin" && curl -L 'https://github.com/WebAssembly/binaryen/releases/download/version_90/binaryen-version_90-x86-linux.tar.gz' | tar  -xz # && PATH="$PATH:$HOME/.cargo/bin" # CF_CF_API_KEY: ${{ secrets.CF_API_KEY }} wrangler 
          #preCommands: curl https://sh.rustup.rs -sSf | sh -s -- -y && PATH="$PATH:$HOME/.cargo/bin" && cargo install --git https://github.com/cloudflare/workers-rs
          #CF_CF_API_KEY: ${{ secrets.CF_API_KEY }} wrangler dev && cargo install --git https://github.com/cloudflare/workers-rs --branch zeb/esbuild
          #command: actions parses this "CF_CF_API_KEY: ${{ secrets.CF_API_KEY }} wrangler dev"
          #wrangler2
          #command: '{{CLOUDFLARE_ACCOUNT_ID: 9ddca7c9df604668fc6d14f079b2f066}} publish --env production'
          #publish: "dev"
          environment: "production"
          wranglerVersion: '2.0.24'
        env:
          USER: root
          #CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CF_ZONE_ID: "6202e995eadc857cd8e97e8ba608286d"
          CF_ACCOUNT_ID: "9ddca7c9df604668fc6d14f079b2f066"
